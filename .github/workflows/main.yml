name: Publish to GitHub Pages

on:
  push:
    branches:
      - main  # or your default branch

jobs:
  #######################################################################
  #                          VALIDATE CODE                              #
  #######################################################################
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Check out source code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'

      - name: Validate Project
        run: |
          # Add commands to build your project here
          # For example, if you're using npm:
          npm install
          npm run prettier
          npm run lint
          npm run build

    #######################################################################
    #                          BUMP VERSION                               #
    #######################################################################
    release:
      if: |
        (
          github.event_name != 'pull_request'
          || (github.event.pull_request && startsWith(github.event.pull_request.title, 'chore: release') != false)
        )
      name: "Release Tag"
      needs: [validate]
      outputs:
        version: ${{ steps.new_releases.outputs.version }}
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Use Node.js 18.x
          uses: actions/setup-node@v2
          with:
            node-version: 18.x
            cache: 'npm'

        - name: run npm i
          run: npm install

        - name: Create/Update Release PR
          run: |
            npm run release -- release-pr \
              --token=${{ secrets.GH_TOKEN }} \
              --repo-url=${{ github.repository }} \
              --target-branch=${{ inputs.GhReleaseBranch }} \
              --release-type=node

        - name: Create Github Release
          id: new_releases
          run: |
            set +e

            output=$(npm run release -- github-release \
              --token=${{ secrets.GH_TOKEN }} \
              --repo-url=${{ github.repository }} \
              --target-branch=${{ inputs.GhReleaseBranch }} \
              --release-type=node \
              --include-v-in-tags=false)

            echo $output

            # version=$(cat package.json | jq -r '.version')
            version=$(echo $output | grep -oP "version: '\K[^']+")
            # version=$(echo $output | sed -nE "s/.*version: '([^']+)'.*/\1/p")

            echo version=$version
            echo "version=$version" >> $GITHUB_OUTPUT

        - name: Debug
          run: |
            echo github.event_name=${{ github.event_name }}
            echo github.event.pull_request.merged=${{ github.event.pull_request.merged }}
            echo needs.release.outputs.version=${{ needs.release.outputs.version }}

    #######################################################################
    #                          BUILD IMAGE                                #
    #######################################################################
    publish:
      if: github.event_name != 'pull_request' && needs.release.outputs.version
      needs: [release]
      uses: solidref/solidref/.github/workflows/publish.yml@main
      secrets: inherit
